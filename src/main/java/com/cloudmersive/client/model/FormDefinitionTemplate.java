/*
 * ocrapi
 * The powerful Optical Character Recognition (OCR) APIs let you convert scanned images of pages into recognized text.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.cloudmersive.client.model;

import java.util.Objects;
import com.cloudmersive.client.model.FormFieldDefinition;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Definition of a form template; use a form template definition to recognize the fields in a form with Cloudmersive OCR
 */
@ApiModel(description = "Definition of a form template; use a form template definition to recognize the fields in a form with Cloudmersive OCR")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-08-17T14:08:32.326-07:00")
public class FormDefinitionTemplate {
  @SerializedName("FieldDefinitions")
  private List<FormFieldDefinition> fieldDefinitions = null;

  public FormDefinitionTemplate fieldDefinitions(List<FormFieldDefinition> fieldDefinitions) {
    this.fieldDefinitions = fieldDefinitions;
    return this;
  }

  public FormDefinitionTemplate addFieldDefinitionsItem(FormFieldDefinition fieldDefinitionsItem) {
    if (this.fieldDefinitions == null) {
      this.fieldDefinitions = new ArrayList<FormFieldDefinition>();
    }
    this.fieldDefinitions.add(fieldDefinitionsItem);
    return this;
  }

   /**
   * Get fieldDefinitions
   * @return fieldDefinitions
  **/
  @ApiModelProperty(value = "")
  public List<FormFieldDefinition> getFieldDefinitions() {
    return fieldDefinitions;
  }

  public void setFieldDefinitions(List<FormFieldDefinition> fieldDefinitions) {
    this.fieldDefinitions = fieldDefinitions;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FormDefinitionTemplate formDefinitionTemplate = (FormDefinitionTemplate) o;
    return Objects.equals(this.fieldDefinitions, formDefinitionTemplate.fieldDefinitions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(fieldDefinitions);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FormDefinitionTemplate {\n");
    
    sb.append("    fieldDefinitions: ").append(toIndentedString(fieldDefinitions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

