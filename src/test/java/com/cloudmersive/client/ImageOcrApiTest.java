/*
 * ocrapi
 * The powerful Optical Character Recognition (OCR) APIs let you convert scanned images of pages into recognized text.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.cloudmersive.client;

import com.cloudmersive.client.invoker.ApiException;
import java.io.File;
import com.cloudmersive.client.model.ImageToLinesWithLocationResult;
import com.cloudmersive.client.model.ImageToTextResponse;
import com.cloudmersive.client.model.ImageToWordsWithLocationResult;
import com.cloudmersive.client.model.PhotoToWordsWithLocationResult;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ImageOcrApi
 */
@Ignore
public class ImageOcrApiTest {

    private final ImageOcrApi api = new ImageOcrApi();

    
    /**
     * Convert a scanned image into words with location
     *
     * Converts an uploaded image in common formats such as JPEG, PNG into lines/text with location information and other metdata via Optical Character Recognition.  This API is intended to be run on scanned documents.  If you want to OCR photos (e.g. taken with a smart phone camera), be sure to use the photo/toText API instead, as it is designed to unskew the image first.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void imageOcrImageLinesWithLocationTest() throws ApiException {
        File imageFile = null;
        String language = null;
        String preprocessing = null;
        ImageToLinesWithLocationResult response = api.imageOcrImageLinesWithLocation(imageFile, language, preprocessing);

        // TODO: test validations
    }
    
    /**
     * Convert a scanned image into words with location
     *
     * Converts an uploaded image in common formats such as JPEG, PNG into words/text with location information and other metdata via Optical Character Recognition.  This API is intended to be run on scanned documents.  If you want to OCR photos (e.g. taken with a smart phone camera), be sure to use the photo/toText API instead, as it is designed to unskew the image first.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void imageOcrImageWordsWithLocationTest() throws ApiException {
        File imageFile = null;
        String language = null;
        String preprocessing = null;
        ImageToWordsWithLocationResult response = api.imageOcrImageWordsWithLocation(imageFile, language, preprocessing);

        // TODO: test validations
    }
    
    /**
     * Convert a photo of a document into text
     *
     * Converts an uploaded photo of a document in common formats such as JPEG, PNG into text via Optical Character Recognition.  This API is intended to be run on photos of documents, e.g. taken with a smartphone and supports cases where other content, such as a desk, are in the frame and the camera is crooked.  If you want to OCR a scanned image, use the image/toText API call instead as it is designed for scanned images.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void imageOcrPhotoToTextTest() throws ApiException {
        File imageFile = null;
        String language = null;
        ImageToTextResponse response = api.imageOcrPhotoToText(imageFile, language);

        // TODO: test validations
    }
    
    /**
     * Convert a photo of a document or receipt into words with location
     *
     * Converts a photo of a document or receipt in common formats such as JPEG, PNG into words/text with location information and other metdata via Optical Character Recognition.  This API is intended to be run on photographs of documents.  If you want to OCR scanned documents (e.g. taken with a scanner), be sure to use the image/toText API instead, as it is designed for that use case.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void imageOcrPhotoWordsWithLocationTest() throws ApiException {
        File imageFile = null;
        String language = null;
        String preprocessing = null;
        PhotoToWordsWithLocationResult response = api.imageOcrPhotoWordsWithLocation(imageFile, language, preprocessing);

        // TODO: test validations
    }
    
    /**
     * Convert a scanned image into text
     *
     * Converts an uploaded image in common formats such as JPEG, PNG into text via Optical Character Recognition.  This API is intended to be run on scanned documents.  If you want to OCR photos (e.g. taken with a smart phone camera), be sure to use the photo/toText API instead, as it is designed to unskew the image first.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void imageOcrPostTest() throws ApiException {
        File imageFile = null;
        String language = null;
        String preprocessing = null;
        ImageToTextResponse response = api.imageOcrPost(imageFile, language, preprocessing);

        // TODO: test validations
    }
    
}
